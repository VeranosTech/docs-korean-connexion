# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Zalando SE
# This file is distributed under the same license as the Connexion package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Connexion 2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-29 15:28+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../routing.rst:2
msgid "Routing"
msgstr ""

#: ../../routing.rst:5
msgid "Endpoint Routing to Your Python Views"
msgstr ""

#: ../../routing.rst:7
msgid ""
"Connexion uses the ``operationId`` from each `Operation Object`_ to "
"identify which Python function should handle each URL."
msgstr ""

#: ../../routing.rst:10
msgid "**Explicit Routing**:"
msgstr ""

#: ../../routing.rst:19
msgid ""
"If you provided this path in your specification POST requests to "
"``http://MYHOST/hello_world``, it would be handled by the function "
"``hello_world`` in ``myapp.api`` module. Optionally, you can include ``x"
"-swagger-router-controller`` in your operation definition, making "
"``operationId`` relative:"
msgstr ""

#: ../../routing.rst:33
msgid ""
"Keep in mind that Connexion follows how `HTTP methods work in Flask`_ and"
" therefore HEAD requests will be handled by the ``operationId`` specified"
" under GET in the specification. If both methods are supported, "
"``connexion.request.method`` can be used to determine which request was "
"made."
msgstr ""

#: ../../routing.rst:39
msgid "Automatic Routing"
msgstr ""

#: ../../routing.rst:41
msgid ""
"To customize this behavior, Connexion can use alternative "
"``Resolvers``â€”for example, ``RestyResolver``. The ``RestyResolver`` will "
"compose an ``operationId`` based on the path and HTTP method of the "
"endpoints in your specification:"
msgstr ""

#: ../../routing.rst:75
msgid ""
"``RestyResolver`` will give precedence to any ``operationId`` encountered"
" in the specification. It will also respect ``x-swagger-router-"
"controller``. You may import and extend ``connexion.resolver.Resolver`` "
"to implement your own ``operationId`` (and function) resolution "
"algorithm."
msgstr ""

#: ../../routing.rst:82
msgid "Automatic Routing with MethodViewResolver"
msgstr ""

#: ../../routing.rst:84
msgid ""
"``MethodViewResolver`` is an customised Resolver based on "
"``RestyResolver`` to take advantage of MethodView structure of building "
"Flask APIs. The ``MethodViewResolver`` will compose an ``operationId`` "
"based on the path and HTTP method of the endpoints in your specification."
" The path will be based on the path you provide in the app.add_api and "
"the path provided in the URL endpoint (specified in the swagger or "
"openapi3)."
msgstr ""

#: ../../routing.rst:96
msgid "And associated YAML"
msgstr ""

#: ../../routing.rst:118
msgid ""
"The structure expects a Class to exists inside the directory ``api`` that"
" conforms to the naming ``<<Classname with Capitalised name>>View``. In "
"the above yaml the necessary MethodView implementation is as follows:"
msgstr ""

#: ../../routing.rst:178
msgid "and a __init__.py file to make the Class visible in the api directory."
msgstr ""

#: ../../routing.rst:184
msgid ""
"``MethodViewResolver`` will give precedence to any ``operationId`` "
"encountered in the specification. It will also respect ``x-swagger-"
"router-controller``. You may import and extend "
"``connexion.resolver.MethodViewResolver`` to implement your own "
"``operationId`` (and function) resolution algorithm."
msgstr ""

#: ../../routing.rst:191
msgid "Parameter Name Sanitation"
msgstr ""

#: ../../routing.rst:193
msgid ""
"The names of query and form parameters, as well as the name of the body "
"parameter are sanitized by removing characters that are not allowed in "
"Python symbols. I.e. all characters that are not letters, digits or the "
"underscore are removed, and finally characters are removed from the front"
" until a letter or an under-score is encountered. As an example:"
msgstr ""

#: ../../routing.rst:204
msgid ""
"Without this sanitation it would e.g. be impossible to implement an "
"`OData <http://www.odata.org>`_ API."
msgstr ""

#: ../../routing.rst:209
msgid "Parameter Variable Converters"
msgstr ""

#: ../../routing.rst:211
msgid ""
"Connexion supports Flask's ``int``, ``float``, and ``path`` route "
"parameter `variable converters "
"<http://flask.pocoo.org/docs/0.12/quickstart/#variable-rules>`_. Specify "
"a route parameter's type as ``integer`` or ``number`` or its type as "
"``string`` and its format as ``path`` to use these converters. For "
"example:"
msgstr ""

#: ../../routing.rst:229
msgid ""
"will create an equivalent Flask route ``/greeting/<path:name>``, allowing"
" requests to include forward slashes in the ``name`` url variable."
msgstr ""

#: ../../routing.rst:233
msgid "API Versioning and basePath"
msgstr ""

#: ../../routing.rst:235
msgid ""
"Setting a base path is useful for versioned APIs. An example of a base "
"path would be the ``1.0`` in ``http://MYHOST/1.0/hello_world``."
msgstr ""

#: ../../routing.rst:238
msgid ""
"If you are using OpenAPI 3.x.x, you set your base URL path in the servers"
" block of the specification. You can either specify a full URL, or just a"
" relative path."
msgstr ""

#: ../../routing.rst:253
msgid ""
"If you are using OpenAPI 2.0, you can define a ``basePath`` on the top "
"level of your OpenAPI 2.0 specification."
msgstr ""

#: ../../routing.rst:263
msgid ""
"If you don't want to include the base path in your specification, you can"
" provide it when adding the API to your application:"
msgstr ""

#: ../../routing.rst:271
msgid "Swagger JSON"
msgstr ""

#: ../../routing.rst:272
msgid ""
"Connexion makes the OpenAPI/Swagger specification in JSON format "
"available from ``swagger.json`` in the base path of the API."
msgstr ""

#: ../../routing.rst:275
msgid "You can disable the Swagger JSON at the application level:"
msgstr ""

#: ../../routing.rst:283
msgid "You can also disable it at the API level:"
msgstr ""

